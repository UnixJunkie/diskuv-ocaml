diff --git a/src/bigstring_stubs.c b/src/bigstring_stubs.c
index 7218bfa..bae0d1c 100644
--- a/src/bigstring_stubs.c
+++ b/src/bigstring_stubs.c
@@ -11,7 +11,9 @@
 #endif
 
 #include <string.h>
-#include <unistd.h>
+#ifndef _MSC_VER
+# include <unistd.h>
+#endif
 #include <errno.h>
 #include <assert.h>
 #include <stdint.h>
@@ -36,7 +38,9 @@
 #if defined(__FreeBSD__) || defined(__NetBSD__) || defined(__OpenBSD__)
 #include <sys/endian.h>
 #else
-#include <endian.h>
+#ifndef _MSC_VER
+# include <endian.h>
+#endif
 #endif
 #define __BYTE_ORDER    _BYTE_ORDER
 #define __LITTLE_ENDIAN _LITTLE_ENDIAN
diff --git a/src/dune b/src/dune
index d3f6d32..ddb3903 100644
--- a/src/dune
+++ b/src/dune
@@ -1,5 +1,5 @@
 (rule (targets config.h rt-flags) (deps)
- (action (bash "cp %{lib:jst-config:config.h} %{lib:jst-config:rt-flags} .")))
+ (action (bash "cp '%{lib:jst-config:config.h}' '%{lib:jst-config:rt-flags}' .")))
 
 (library (name core_kernel) (public_name core_kernel)
  (install_c_headers time_ns_stubs)
diff --git a/src/gc_stubs.c b/src/gc_stubs.c
index 41174f9..93fe3f5 100644
--- a/src/gc_stubs.c
+++ b/src/gc_stubs.c
@@ -2,6 +2,15 @@
 #include <caml/memory.h>
 #include <caml/gc_ctrl.h>
 
+#if defined(_MSC_VER) && _MSC_VER >= 1500
+# define __unused(x) __pragma( warning (push) ) \
+    __pragma( warning (disable:4189 ) ) \
+    x \
+    __pragma( warning (pop))
+#else
+# define __unused(x) x __attribute__((unused))
+#endif
+
 static intnat minor_words(void)
 {
   return (intnat) (caml_stat_minor_words +
@@ -13,7 +22,7 @@ static intnat promoted_words(void)
   return ((intnat) caml_stat_promoted_words);
 }
 
-CAMLprim value core_kernel_gc_minor_words(value unit __attribute__((unused)))
+CAMLprim value core_kernel_gc_minor_words(__unused(value unit))
 {
   return Val_long(minor_words());
 }
@@ -23,52 +32,52 @@ static intnat major_words(void)
   return (intnat) (caml_stat_major_words + (double) caml_allocated_words);
 }
 
-CAMLprim value core_kernel_gc_major_words(value unit __attribute__((unused)))
+CAMLprim value core_kernel_gc_major_words(__unused(value unit))
 {
   return Val_long(major_words());
 }
 
-CAMLprim value core_kernel_gc_promoted_words(value unit __attribute__((unused)))
+CAMLprim value core_kernel_gc_promoted_words(__unused(value unit))
 {
   return Val_long(promoted_words());
 }
 
-CAMLprim value core_kernel_gc_minor_collections(value unit __attribute__((unused)))
+CAMLprim value core_kernel_gc_minor_collections(__unused(value unit))
 {
   return Val_long(caml_stat_minor_collections);
 }
 
-CAMLprim value core_kernel_gc_major_collections(value unit __attribute__((unused)))
+CAMLprim value core_kernel_gc_major_collections(__unused(value unit))
 {
   return Val_long(caml_stat_major_collections);
 }
 
-CAMLprim value core_kernel_gc_heap_words(value unit __attribute__((unused)))
+CAMLprim value core_kernel_gc_heap_words(__unused(value unit))
 {
   return Val_long(caml_stat_heap_wsz);
 }
 
-CAMLprim value core_kernel_gc_heap_chunks(value unit __attribute__((unused)))
+CAMLprim value core_kernel_gc_heap_chunks(__unused(value unit))
 {
   return Val_long(caml_stat_heap_chunks);
 }
 
-CAMLprim value core_kernel_gc_compactions(value unit __attribute__((unused)))
+CAMLprim value core_kernel_gc_compactions(__unused(value unit))
 {
   return Val_long(caml_stat_compactions);
 }
 
-CAMLprim value core_kernel_gc_top_heap_words(value unit __attribute__((unused)))
+CAMLprim value core_kernel_gc_top_heap_words(__unused(value unit))
 {
   return Val_long(caml_stat_top_heap_wsz);
 }
 
-CAMLprim value core_kernel_gc_major_plus_minor_words(value unit __attribute__((unused)))
+CAMLprim value core_kernel_gc_major_plus_minor_words(__unused(value unit))
 {
   return Val_long(minor_words() + major_words());
 }
 
-CAMLprim value core_kernel_gc_allocated_words(value unit __attribute__((unused)))
+CAMLprim value core_kernel_gc_allocated_words(__unused(value unit))
 {
   return Val_long(minor_words() + major_words() - promoted_words());
 }
diff --git a/src/md5_stubs.c b/src/md5_stubs.c
index 55e0d07..ff7869d 100644
--- a/src/md5_stubs.c
+++ b/src/md5_stubs.c
@@ -1,4 +1,6 @@
-#include <unistd.h>
+#ifndef _MSC_VER
+# include <unistd.h>
+#endif
 #include <errno.h>
 #include <caml/alloc.h>
 #include <caml/memory.h>
diff --git a/version_util/src/version_util_fallback_stubs.c b/version_util/src/version_util_fallback_stubs.c
index 26e516e..5f58726 100644
--- a/version_util/src/version_util_fallback_stubs.c
+++ b/version_util/src/version_util_fallback_stubs.c
@@ -9,13 +9,22 @@
 #include <caml/memory.h>
 #include <caml/alloc.h>
 
-CAMLprim CAMLweakdef value generated_hg_version (value unit __attribute__ ((unused)))
+#if defined(_MSC_VER) && _MSC_VER >= 1500
+# define __unused(x) __pragma( warning (push) ) \
+    __pragma( warning (disable:4189 ) ) \
+    x \
+    __pragma( warning (pop))
+#else
+# define __unused(x) x __attribute__((unused))
+#endif
+
+CAMLprim CAMLweakdef value generated_hg_version (__unused(value unit))
 {
   char v[] = "NO_VERSION_UTIL";
   return(caml_copy_string(v));
 }
 
-CAMLprim CAMLweakdef value generated_build_info (value unit __attribute__ ((unused)))
+CAMLprim CAMLweakdef value generated_build_info (__unused(value unit))
 {
   char v[] = "("
       "(username \"\")"
